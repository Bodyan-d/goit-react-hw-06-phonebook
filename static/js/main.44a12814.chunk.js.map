{"version":3,"sources":["components/redux/phonebook/phonebook-actions.js","components/redux/phonebook/phonebook-reduser.js","components/redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["addContact","createAction","payload","name","number","id","uuidv4","deleteContact","filterContacts","items","createReducer","state","action","filter","el","combineReducers","store","configureStore","reducer","contacts","contatsReduser","middleware","getDefaultMiddleware","concat","logger","ContactForm","handleChange","handleSubmit","className","onSubmit","onChange","type","value","pattern","title","required","Filter","ContactList","deleteItem","map","contact","onClick","App","useState","setName","setNumber","useSelector","dispatch","useDispatch","e","target","actions","preventDefault","some","includes","alert","toLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44a12814.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction(\r\n  'phonebook/addContact',\r\n\r\n  ({ name, number }) => {\r\n    return {\r\n      payload: {\r\n        name,\r\n        number,\r\n        id: uuidv4(),\r\n      },\r\n    };\r\n  },\r\n);\r\nexport const deleteContact = createAction('phonebook/deleteContact');\r\n\r\nexport const filterContacts = createAction('phonebook/filterContacts');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filterContacts } from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, action) => [...state, action.payload],\r\n  [deleteContact]: (state, action) =>\r\n    state.filter(el => el.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contatsReduser from './phonebook/phonebook-reduser';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contatsReduser,\r\n  },\r\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport './ContactForm.css';\n\nexport default function ContactForm({\n  name,\n  number,\n  handleChange,\n  handleSubmit,\n}) {\n  return (\n    <form className=\"phonebook-form\" onSubmit={handleSubmit}>\n      <label className=\"phonebook-label\">\n        Name\n        <input\n          className=\"phonebook-input\"\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className=\"phonebook-label\">\n        Number\n        <input\n          className=\"phonebook-input\"\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className=\"submt-form\" type=\"submit\">\n        Submit\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport './Filter.css';\n\nexport default function Filter({ filter, handleChange }) {\n  return (\n    <div>\n      <p className=\"filter-title\">Find contacts by name</p>\n      <input\n        className=\"search\"\n        onChange={handleChange}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport './ContactList.css';\n\nexport default function ContactList({ contacts, deleteItem }) {\n  return (\n    <ul>\n      {contacts.map(contact => {\n        return (\n          <li key={contact.id} className=\"list-item\">\n            {`${contact.name}: ${contact.number}`}\n            <button id={contact.id} onClick={deleteItem} className=\"delete-btn\">\n              delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from './components/redux/phonebook/phonebook-actions';\n\nimport './App.css';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    if (e.target.name === 'filter') {\n      dispatch(actions.filterContacts(e.target.value));\n      return;\n    }\n    if (e.target.name === 'name') {\n      setName(e.target.value);\n      return;\n    }\n    if (e.target.name === 'number') {\n      setNumber(e.target.value);\n      return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.some(contact => contact.name.includes(name))) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(actions.addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  const handleFilter = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const deleteItem = e => {\n    const { id } = e.target;\n\n    dispatch(actions.deleteContact(id));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm\n        name={name}\n        number={number}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      />\n\n      <h2>Contacts</h2>\n      <Filter filter={filter} handleChange={handleChange} />\n      <ContactList contacts={handleFilter()} deleteItem={deleteItem} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './components/redux/store'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}